{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstant';\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        loading: false,\n        product: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ricar/Desktop/Projetos/MERN-E-Commerce-Web-Application/frontend/src/reducers/cartReducer.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","loading"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,2BAAhD;AACA,OAAO,MAAMC,WAAW,GAAG,CACvBC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,eAAe,EAAE;AAAlC,CADe,EAEvBC,MAFuB,KAGtB;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,aAAL;AACI,YAAMQ,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAC3BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADlC;AAFR,SAAP;AAMH,OAPD,MAOO;AACH,eAAO,EACH,GAAGT,KADA;AAEHC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFR,SAAP;AAIH;;AACL,SAAKP,gBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHY,QAAAA,OAAO,EAAE,KAFN;AAEaF,QAAAA,OAAO,EAAEP,MAAM,CAACG;AAF7B,OAAP;;AAIJ;AACI,aAAON,KAAP;AAzBR;AA2BH,CA/BM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstant'\r\nexport const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                loading: false, product: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}